# -*- coding: utf-8 -*-
"""ModelCar.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kaG8vFezwoWRFVRer-h0dkSaFH2PXrKp
"""

from __future__ import division
import pandas
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from Graph import GR


data_csv=pandas.read_csv('cars_dataset.csv', delimiter=',')

#---------------------------------------------------
d_vgood={'vhigh':0,'high':0, 'med':0, 'low':0}
d_good={'vhigh':0,'high':0, 'med':0, 'low':0}
d_acc={'vhigh':0,'high':0, 'med':0, 'low':0}
d_unacc={'vhigh':0,'high':0, 'med':0, 'low':0}
#----------------------------------------------Buying
m_vgood={'vhigh':0,'high':0, 'med':0, 'low':0}
m_good={'vhigh':0,'high':0, 'med':0, 'low':0}
m_acc={'vhigh':0,'high':0, 'med':0, 'low':0}
m_unacc={'vhigh':0,'high':0, 'med':0, 'low':0}
#-----------------------------------------------maint
doors_vgood={'5more':0, 'three':0, 'two':0}
doors_good={'5more':0,'three':0, 'two':0}
doors_acc={'5more':0,'three':0, 'two':0}
doors_unacc={'5more':0, 'three':0, 'two':0}
#---------------------------------------------------doors
persons_vgood={'more':0,'four':0,  'two':0}
persons_good={'more':0,'four':0,  'two':0}
persons_acc={'more':0,'four':0,  'two':0}
persons_unacc={'more':0,'four':0,'two':0}
#---------------------------------------------------persons
lug_boot_vgood={'big':0,'med':0,  'small':0}
lug_boot_good={'big':0,'med':0,  'small':0}
lug_boot_acc={'big':0,'med':0,  'small':0}
lug_boot_unacc={'big':0,'med':0,'small':0}
#-------------------------------------------------------lug)boot
safety_vgood={'high':0,'med':0,  'low':0}
safety_good={'high':0,'med':0,  'low':0}
safety_acc={'high':0,'med':0,  'low':0}
safety_unacc={'high':0,'med':0,'low':0}
#--------------------------------------------------safety

for i in range(len(data_csv)):
#______________________________________________Buying  
  if data_csv.car[i]=='vgood':
    if data_csv.buying[i]=='vhigh':
       d_vgood['vhigh']+=1
    elif data_csv.buying[i]=='high':
      d_vgood['high']+=1
    elif data_csv.buying[i]=='med':
      d_vgood['med']+=1
    elif data_csv.buying[i]=='low':
      d_vgood['low']+=1

  elif data_csv.car[i]=='good':
    
    if data_csv.buying[i]=='vhigh':
      d_good['vhigh']+=1
    elif data_csv.buying[i]=='high':
      d_good['high']+=1
    elif data_csv.buying[i]=='med':
      d_good['med']+=1
    elif data_csv.buying[i]=='low':
      d_good['low']+=1

  elif data_csv.car[i]=='acc':
    if data_csv.buying[i]=='vhigh':
      d_acc['vhigh']+=1
    elif data_csv.buying[i]=='high':
      d_acc['high']+=1
    elif data_csv.buying[i]=='med':
      d_acc['med']+=1
    elif data_csv.buying[i]=='low':
      d_acc['low']+=1

  elif data_csv.car[i]=='unacc':
    if data_csv.buying[i]=='vhigh':
      d_unacc['vhigh']+=1
    elif data_csv.buying[i]=='high':
      d_unacc['high']+=1
    elif data_csv.buying[i]=='med':
      d_unacc['med']+=1
    elif data_csv.buying[i]=='low':
      d_unacc['low']+=1
#_____________________________________________________________END Buying

#_____________________________________________________________maint
  if data_csv.car[i]=='vgood':
    if data_csv.maint[i]=='vgood':
       m_vgood['vhigh']+=1
    elif data_csv.maint[i]=='high':
      m_vgood['high']+=1
    elif data_csv.maint[i]=='med':
      m_vgood['med']+=1
    elif data_csv.maint[i]=='low':
      m_vgood['low']+=1

  elif data_csv.car[i]=='good':
    
    if data_csv.maint[i]=='vhigh':
      m_good['vhigh']+=1
    elif data_csv.maint[i]=='high':
      m_good['high']+=1
    elif data_csv.maint[i]=='med':
      m_good['med']+=1
    elif data_csv.maint[i]=='low':
      m_good['low']+=1

  elif data_csv.car[i]=='acc':
    if data_csv.maint[i]=='vhigh':
      m_acc['vhigh']+=1
    elif data_csv.maint[i]=='high':
      m_acc['high']+=1
    elif data_csv.maint[i]=='med':
      m_acc['med']+=1
    elif data_csv.maint[i]=='low':
      m_acc['low']+=1

  elif data_csv.car[i]=='unacc':
    if data_csv.maint[i]=='vhigh':
      m_unacc['vhigh']+=1
    elif data_csv.maint[i]=='high':
      m_unacc['high']+=1
    elif data_csv.maint[i]=='med':
      m_unacc['med']+=1
    elif data_csv.maint[i]=='low':
      m_unacc['low']+=1
#___________________________________________________END Mint

#_____________________________________________________________Doors
  if data_csv.car[i]=='vgood':
    if data_csv.doors[i]=='5more':
       doors_vgood['5more']+=1
    elif data_csv.doors[i]=='four':
      doors_vgood['three']+=1
    elif data_csv.doors[i]=='three':
      doors_vgood['three']+=1
    elif data_csv.doors[i]=='two':
      doors_vgood['two']+=1

  elif data_csv.car[i]=='good':
    
    if data_csv.doors[i]=='5more':
      doors_good['5more']+=1
    elif data_csv.doors[i]=='four':
      doors_good['three']+=1
    elif data_csv.doors[i]=='three':
      doors_good['three']+=1
    elif data_csv.doors[i]=='two':
      doors_good['two']+=1

  elif data_csv.car[i]=='acc':
    if data_csv.doors[i]=='5more':
      doors_acc['5more']+=1
    elif data_csv.doors[i]=='four':
      doors_acc['three']+=1
    elif data_csv.doors[i]=='three':
      doors_acc['three']+=1
    elif data_csv.doors[i]=='two':
      doors_acc['two']+=1

  elif data_csv.car[i]=='unacc':
    if data_csv.doors[i]=='5more':
      doors_unacc['5more']+=1
    elif data_csv.doors[i]=='four':
      doors_unacc['three']+=1
    elif data_csv.doors[i]=='three':
      doors_unacc['three']+=1
    elif data_csv.doors[i]=='two':
      doors_unacc['two']+=1
#-------------------------------------------------------------EndDOOR
#-----------------------------------------------------------------------------------
#---------------Persons
  if data_csv.car[i]=='vgood':
    if data_csv.persons[i]=='more':
       persons_vgood['more']+=1
    elif data_csv.persons[i]=='four':
      persons_vgood['four']+=1
    elif data_csv.persons[i]=='two':
      persons_vgood['two']+=1

  elif data_csv.car[i]=='good':
    
    if data_csv.persons[i]=='more':
      persons_good['more']+=1
    elif data_csv.persons[i]=='four':
      persons_good['four']+=1

    elif data_csv.persons[i]=='two':
      persons_good['two']+=1

  elif data_csv.car[i]=='acc':
    if data_csv.persons[i]=='more':
      persons_acc['more']+=1
    elif data_csv.persons[i]=='four':
      persons_acc['four']+=1

    elif data_csv.persons[i]=='two':
      persons_acc['two']+=1

  elif data_csv.car[i]=='unacc':
    if data_csv.persons[i]=='more':
      persons_unacc['more']+=1
    elif data_csv.persons[i]=='four':
      persons_unacc['four']+=1

    elif data_csv.persons[i]=='two':
      persons_unacc['two']+=1
#----------------------------------------------------ENd Persons

  if data_csv.car[i]=='vgood':
    if data_csv.lug_boot[i]=='big':
       lug_boot_vgood['big']+=1
    elif data_csv.lug_boot[i]=='med':
      lug_boot_vgood['med']+=1
    elif data_csv.lug_boot[i]=='small':
      lug_boot_vgood['small']+=1

  elif data_csv.car[i]=='good':
    
    if data_csv.lug_boot[i]=='big':
      lug_boot_good['big']+=1
    elif data_csv.lug_boot[i]=='med':
      lug_boot_good['med']+=1

    elif data_csv.lug_boot[i]=='small':
      lug_boot_good['small']+=1

  elif data_csv.car[i]=='acc':
    if data_csv.lug_boot[i]=='big':
      lug_boot_acc['big']+=1
    elif data_csv.lug_boot[i]=='med':
      lug_boot_acc['med']+=1

    elif data_csv.lug_boot[i]=='small':
      lug_boot_acc['small']+=1

  elif data_csv.car[i]=='unacc':
    if data_csv.lug_boot[i]=='big':
      lug_boot_unacc['big']+=1
    elif data_csv.lug_boot[i]=='med':
      lug_boot_unacc['med']+=1

    elif data_csv.lug_boot[i]=='small':
      lug_boot_unacc['small']+=1
#---------------------------------------------------END lug_boot
  if data_csv.car[i]=='vgood':
    if data_csv.safety[i]=='high':
       safety_vgood['high']+=1
    elif data_csv.safety[i]=='med':
      safety_vgood['med']+=1
    elif data_csv.safety[i]=='low':
      safety_vgood['low']+=1

  elif data_csv.car[i]=='good':
    
    if data_csv.safety[i]=='high':
      safety_good['high']+=1
    elif data_csv.safety[i]=='med':
      safety_good['med']+=1

    elif data_csv.safety[i]=='low':
      safety_good['low']+=1

  elif data_csv.car[i]=='acc':
    if data_csv.safety[i]=='high':
      safety_acc['high']+=1
    elif data_csv.safety[i]=='med':
      safety_acc['med']+=1

    elif data_csv.safety[i]=='low':
      safety_acc['low']+=1

  elif data_csv.car[i]=='unacc':
    if data_csv.safety[i]=='high':
      safety_unacc['high']+=1
    elif data_csv.safety[i]=='med':
      safety_unacc['med']+=1

    elif data_csv.safety[i]=='low':
      safety_unacc['low']+=1



d={
    'vgood_buy':d_vgood,
    'good_buy':d_good,
    'acc_buy':d_acc,
   'unacc_buy': d_unacc,
    'vgood_mint':m_vgood,
    'good_mint':m_good,
    'acc_mint':m_acc,
   'unacc_mint': m_unacc,
   'vgood_doors':doors_vgood,
    'good_doors':doors_good,
    'acc_doors':doors_acc,
   'unacc_doors': doors_unacc,
    'vgood_persons':persons_vgood,
    'good_persons':persons_good,
    'acc_persons':persons_acc,
   'unacc_persons': persons_unacc,
       'vgood_lug_boot':lug_boot_vgood,
    'good_lug_boot':lug_boot_good,
    'acc_lug_boot':lug_boot_acc,
   'unacc_lug_boot': lug_boot_unacc,
         'vgood_safety':safety_vgood,
    'good_safety':safety_good,
    'acc_safety':safety_acc,
   'unacc_safety': safety_unacc,

   
   }







#----------------------------------------------------------------------------------------------------------- Часть 2 созлание и обучение нейросети
data_csv=pandas.get_dummies(data_csv, columns=[ 'buying','maint', 'doors', 'persons', 'lug_boot', 'safety'])# Чтобы она обучалось нужны данные, которые она сможет принять. Здесь заменяем на 1 и 0, вместо слов



model=RandomForestClassifier()
X=data_csv.drop(['car' ], axis=1)
y=data_csv.car

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)# Делим данные на ту, по которой тренируем и для теста

model.fit(X_train, y_train)

print('точность модели',model.score(X_test, y_test))#проверка

GR(d) #фУНКЦИЯ ПО ГРАФИКАМ

